package files

import (
	"bufio"
	"errors"
	"fmt"
	"io/fs"
	"os"
	"path/filepath"
	"strings"

	"github\.com/danielpickens/astra/pkg/testingutil/filesystem"
	"github\.com/danielpickens/astra/pkg/util"
)

const _dotastraGenerated = "generated"

// ReportLocalFileGeneratedByastra appends the specified file path to the .astra/generated file,
// taking care of creating it if it does not exist.
// The file path can be absolute or relative to the root directory specified.
// This function should be called by astra commands that generate a file, anytime a new file is generated by astra.
// This way, we would be able to determine (via GetFilesGeneratedByastra) if a file was created by astra or not,
// in case we need for example to delete it.
//
// Note that it is quite impossible with this approach to cover all scenarios;
// for example, if an astra command generates a new file (and calls ReportLocalFileGeneratedByastra as expected),
// but the user later deletes it and recreates it, GetFilesGeneratedByastra would still return this file path.
func ReportLocalFileGeneratedByastra(filesys filesystem.Filesystem, rootDirectory string, filePath string) error {
	dotastraDirectory := filepath.Join(rootDirectory, util.DotastraDirectory)
	err := filesys.MkdirAll(dotastraDirectory, 0755)
	if err != nil {
		return err
	}

	astraGeneratedFile := filepath.Join(rootDirectory, util.DotastraDirectory, _dotastraGenerated)
	f, err := filesys.OpenFile(astraGeneratedFile, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0644)
	if err != nil {
		return fmt.Errorf("unable to read or create file %q: %w", astraGeneratedFile, err)
	}
	defer f.Close()

	relativePath := filePath
	if filepath.IsAbs(filePath) && strings.HasPrefix(filePath, rootDirectory) {
		relativePath, err = filepath.Rel(rootDirectory, filePath)
		if err != nil {
			return err
		}
	}
	_, err = f.WriteString(relativePath + "\n")
	return err
}

// GetFilesGeneratedByastra returns a list of files that were initially created by astra.
// Under the hood, it works by reading the content of the .astra/generated file (ignoring blank lines),
// which is filled by any command that generates a file.
// astra commands that generate files should call ReportLocalFileGeneratedByastra anytime a file is generated.
// Note that the .astra directory itself is always included in the list returned.
// No error is returned if the .astra/generated file does not exist.
func GetFilesGeneratedByastra(filesys filesystem.Filesystem, rootDirectory string) ([]string, error) {
	list := []string{util.DotastraDirectory}

	astraGeneratedFile := filepath.Join(rootDirectory, util.DotastraDirectory, _dotastraGenerated)
	f, err := filesys.OpenFile(astraGeneratedFile, os.O_RDWR, 0666)
	if err != nil {
		if errors.Is(err, fs.ErrNotExist) {
			return list, nil
		}
		return list, err
	}
	defer f.Close()

	scanner := bufio.NewScanner(f)
	scanner.Split(bufio.ScanLines)
	for scanner.Scan() {
		line := scanner.Text()
		if line == "" || strings.TrimSpace(line) == "" {
			continue
		}
		list = append(list, line)
	}

	return list, nil
}
